<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- name space는 BookRepo의 fully qualified name으로 설정한다. -->
<mapper namespace="com.ssafy.cafe.model.dao.ProductDao">

	<!-- 1. 상품 추가 (type : 1 ~ 5)-->
	<insert id="insert" parameterType="Product">
		INSERT INTO t_product
		(name,
		type,
		price,
		img)
		VALUES
		(#{name},
		#{type},
		#{price},
		#{img})
	</insert>

	<!-- 2. 상품 수정 -->
	<update id="update" parameterType="Product">
		UPDATE t_product
		SET
		name = #{name},
		type = #{type},
		price = #{price},
		img = #{img}
		WHERE id = #{id}
	</update>
	
	<!-- 3. 상품 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE FROM t_product
		WHERE id
		= #{id}
	</delete>
	
	<!-- 4. id로 상품 조회 -->
	<select id="select" parameterType="int" resultType="Product">
		SELECT * 
		FROM t_product
		WHERE id = #{id}
	</select>
	
	<!-- 5. 상품 전체 조회 -->
	<select id="selectAll" resultType="Product">
		SELECT * FROM t_product order by id asc
	</select>
	
	<!-- 6. 상품 타입 텍스트로 상품 조회 -->
	<select id="selectWithProductType" parameterType="String" resultType="Product">
		select p.id, pt.type_name as type, p.name, p.price, p.img
		from t_product as p
		join t_product_type as pt
		on p.type = pt.id
		where pt.type_name = #{type}
	</select>
	
	<!-- 7. id 기준 상품에 대한 comment 조회 -->
	<!-- backend  관통 과정에서 추가됨 -->
	<select id="selectWithComment" resultType="map" parameterType="int">
	select p.name, p.price, p.img, c.id as commentId, c.user_id, c.rating, c.comment, p.id as product_id, p.type as product_type,
		(select name from t_user where id=c.user_Id	) userName,
	    (select count(rating)  from t_comment where product_id=p.id) as commentCnt,
	    (select avg(rating)  from t_comment where product_id=p.id) as avg,
	    (select sum(quantity) from t_order_detail where product_id=p.id) as sells
	from (select p.id, pt.type_name as type, p.name, p.price, p.img from t_product as p join t_product_type as pt on p.type = pt.id) as p
	left join  t_comment c 
	on p.id=c.product_id
	where p.id = #{id}
	order by c.id desc;
	</select>
	
	<!-- 8. 주문 베스트 메뉴 top 5 -->
	<select id="selectBestProduct" resultType="map">
		select ot.product_id, ot.d_id, count(ot.d_id) as cnt, p.name, p.type, p.price, p.img
		from t_order_detail as ot
		join t_product as p
		on ot.product_id = p.id
		group by ot.product_id
		order by cnt desc
		limit 5;
	</select>
	
</mapper>